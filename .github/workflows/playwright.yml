name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ master ]

permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
              node-version: 16

      - name: Install junit merge
        run: npm install -g junit-merge fs

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
#      - name: Build & Install
#        run: mvn -B install -D skipTests --no-transfer-progress
      - name: Ensure browsers are installed
        run: mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"
      - name: Run tests
        run: mvn clean test

      - name: Merge junit xml reports
        if: always()
        run: junit-merge  -o results.xml -d target/surefire-reports/junitreports/

      - name: Test Report
        id: test_report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
            name: Playwright Tests            # Name of the check run which will be created
            path: results.xml   # Path to test results
            reporter: java-junit

      - name: Read Test Report URL
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Available outputs:"
          echo "${{ toJSON(steps.test_report.outputs) }}"
          echo "Check run URL: ${{ steps.test_report.outputs.url }}"
          echo "TEST_RUN_HTML=${{ steps.test_report.outputs.url_html }}" | tee -a $GITHUB_ENV

      - name: Convert xml to json report
        if: always()
        run: mvn compile exec:java -D exec.mainClass=org.example.utilities.XmlToJsonConverter

      - name : Create slack Json report
        if: always()
        run: node src/main/java/org/example/utilities/slackPayloadGenerator.js

      - name: Send  JSON report to Slack
        if: always()
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload-file-path: "./jsonReporter.json"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
